# 更新服务器的地址，和Exe客户端的api选项互相兼容
# 注意这是4.0版本的配置文件，结尾普遍从3.0版本的.yml变成了.json，请注意区分！
server: http://127.0.0.1:8000/index.json

# 更新完是否自动退出，默认值false（默认不开启此选项）
# true: 更新完后需要点击“确定”对话框退出程序
# false: 更新完后会自动关闭窗口
# auto-exit: true

# 显式指定“更新起始目录”，默认值是空字符串""（默认不开启此选项）
# 实际文件更新的起始目录 = 工作目录 + base-path
# 1.如果base-path被设置为'.'可以强制指定当前工作目录为更新起始目录并禁用.minecraft目录搜索
# 2.如果base-path被设置为../，这样就可以更新工作目录的上级目录了
# 3.如果base-path被设置为.minecraft222/，这样所有文件就会被更新到.minecraft222里
# 如果此选项被注释或者为空字符串''，程序会自动寻找最近的.minecraft目录的父目录作为更新起始路径
# 如果此选项未被注释，则会禁用自动搜寻.minecraft的功能。
# base-path: ''

# 开启版本缓存功能（用于加速检查更新的过程）（仅手机端或者参与更新的文件极大时建议开启）
# 开启后客户端每次更新完成后会把服务端的文件结构计算一个校验存起来，
# 待下次更新时，服务端没有任何文件变动，则直接跳过本地文件检查过程。
# 此选项开启后服务端文件未变动时可以直接秒启动游戏，体验非常好。
# 注意开启此选项后，从客户端对文件的修改是检测不到的，
# 因为服务端文件未变动时客户端会直接跳过文件检测过程，如果需要客户端强制检查文件，
# 需要手动删除掉`version-cache`文件（服务端有文件变动时则会自动触发客户端强制检查文件更新）
#
# 此选项填写一个相对路径文件名，每次更新完成后会把一串校验字符串存储到这个文件中
# version-cache: client-version.txt

# HTTP请求无缓存模式（默认不开启此选项）
# 解除注释之后会在每个请求后面跟上?t=<xx>（<xx>会被换成实际时间戳秒）以解决HTTP缓存问题
# 这里的t也可以换成别的参数名，比如ts，_ （或者单个下划线）
# no-cache: t

# 检查文件修改时间模式（推荐开启此选项）
# 在检查文件更新的时候，会先检查文件修改时间，不一致时再去检查文件hash。
# 大多数时候可以极大地提升文件检查效率，尤其是大文件场景下非常明显
# check-modified: true

# 安静模式（默认不开启此选项）
# true: 程序启动后不显示窗口，会在后台静默检查文件更新，如果没有更新直接启动Minecraft，
#       如果有更新再显示下载进度条窗口
# false: 程序启动后显示窗口，在窗口中显示检查文件的进度和下载文件的进度，一切妥当后启动Minecraft
# 此选项仅仅当程序以图型界面模式启动时有效
# quiet-mode: true

# 更新时如果发生错误（尤其是网络原因）时，是否继续进入游戏，而不是使游戏崩溃（默认不开启此选项）
# true: 如果更新发生错误，继续启动Minecraft游戏
# false：如果更新发生错误，强制使Minecraft崩溃，停止启动过程
# 如果需要区分是更新问题还是游戏本身的问题，请查看游戏启动日志
# 此选项仅当程序以JavaAgent模式（非图形模式）启动时有效
# no-throwing: true